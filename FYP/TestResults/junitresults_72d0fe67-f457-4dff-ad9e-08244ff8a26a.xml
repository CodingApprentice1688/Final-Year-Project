<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="4" time="1.180" timestamp="2022-07-06T19:24:38.009005" hostname="DESKTOP-UCRF95V"><testcase classname="FYP.Test.test_login.test_patient" name="test_new_user" file="FYP\Test\test_login.py" line="6" time="0.032"><failure message="TypeError: test_new_user() missing 1 required positional argument: 'password'">self = &lt;unittest.case._Outcome object at 0x0000026F0BB89A00&gt;
test_case = &lt;test_login.test_patient testMethod=test_new_user&gt;, isTest = True

    @contextlib.contextmanager
    def testPartExecutor(self, test_case, isTest=False):
        old_success = self.success
        self.success = True
        try:
&gt;           yield

C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\unittest\case.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\unittest\case.py:592: in run
    self._callTestMethod(testMethod)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;test_login.test_patient testMethod=test_new_user&gt;
method = &lt;bound method test_patient.test_new_user of &lt;test_login.test_patient testMethod=test_new_user&gt;&gt;

    def _callTestMethod(self, method):
&gt;       method()
E       TypeError: test_new_user() missing 1 required positional argument: 'password'

C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\unittest\case.py:550: TypeError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="FYP.Test.test_patient.test_patient" name="test_access_session" file="FYP\Test\test_patient.py" line="41" time="0.011"><failure message="AttributeError: __enter__">client = &lt;test_patient.test_patient testMethod=test_access_session&gt;

    def test_access_session(client):
&gt;       with client:
E       AttributeError: __enter__

FYP\Test\test_patient.py:43: AttributeError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="FYP.Test.test_patient.test_patient" name="test_pass_correct" file="FYP\Test\test_patient.py" line="28" time="0.011"><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="FYP.Test.test_patient.test_patient" name="test_pass_incorrect" file="FYP\Test\test_patient.py" line="36" time="0.004"><failure message="AssertionError: False is not true">self = &lt;test_patient.test_patient testMethod=test_pass_incorrect&gt;

    def test_pass_incorrect(self):
        tester = app.test_client(self)
        response = tester.post('/LoginController', data=dict(username = 'wenling', password='password'))
&gt;       self.assertTrue(b'password' in response.data)
E       AssertionError: False is not true

FYP\Test\test_patient.py:40: AssertionError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase></testsuite></testsuites>